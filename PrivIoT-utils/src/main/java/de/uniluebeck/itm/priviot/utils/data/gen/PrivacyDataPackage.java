//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.08.29 at 03:26:07 PM CEST 
//


package de.uniluebeck.itm.priviot.utils.data.gen;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 * Represents a privacy data package which can be sent to a smart service proxy.
 * The package contains rdf sensor data about a sensor, specified by sensorUri.
 * The content is encrypted symmetrically while the key used for encryption is encrypted asymmetrically with the public key of the recipient.
 * The package also contains the metadata of the symmetric encryption.
 * All metadata of the asymmetric encrpytion is set by the certificate of the recipient. 
 * The private key of the recipient is needed to decrypt the content.
 *           
 * 
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {

})
@XmlRootElement(name = "privacyData")
public class PrivacyDataPackage {

    @XmlElement(name = "uri", required = true)
    @XmlSchemaType(name = "anyURI")
    protected String sensorUri;
    @XmlElement(name = "algorithm", required = true)
    protected String encryptionAlgorithm;
    @XmlElement(name = "key", required = true)
    protected String encryptedSymmetricKey;
    @XmlElement(name = "iv", required = true)
    protected String initializationVector;
    @XmlElement(name = "content", required = true)
    protected String encryptedContent;

    /**
     * URI of the sensor. Can be used as graph name by the recipient.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSensorUri() {
        return sensorUri;
    }

    /**
     * Sets the value of the sensorUri property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSensorUri(String value) {
        this.sensorUri = value;
    }

    /**
     * Specifies the algorithm, used for symmetric encryption.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEncryptionAlgorithm() {
        return encryptionAlgorithm;
    }

    /**
     * Sets the value of the encryptionAlgorithm property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEncryptionAlgorithm(String value) {
        this.encryptionAlgorithm = value;
    }

    /**
     * The key used for symmetric encryption of the content. It is encrpyted with the public key of the recipient.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEncryptedSymmetricKey() {
        return encryptedSymmetricKey;
    }

    /**
     * Sets the value of the encryptedSymmetricKey property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEncryptedSymmetricKey(String value) {
        this.encryptedSymmetricKey = value;
    }

    /**
     * The initialization vector used for symmetric encryption of the content, if needed by the encryption algorithm. Empty string if not needed.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getInitializationVector() {
        return initializationVector;
    }

    /**
     * Sets the value of the initializationVector property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInitializationVector(String value) {
        this.initializationVector = value;
    }

    /**
     * The content of the package, symmetrically encrypted with encryptionAlgorithm, encryptedSymmetricKey and initializationVector.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEncryptedContent() {
        return encryptedContent;
    }

    /**
     * Sets the value of the encryptedContent property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEncryptedContent(String value) {
        this.encryptedContent = value;
    }

}
